// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelsDb;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ModelsDb.Migrations
{
    [DbContext(typeof(DbBank))]
    [Migration("20220925130635_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ModelsDb.AccountDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("account_id");

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<Guid?>("ClientDbId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClientDbId");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("ModelsDb.ClientDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_client");

                    b.Property<DateTime>("BirtDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birt_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("PasportNum")
                        .HasColumnType("integer")
                        .HasColumnName("pasport_num");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("ModelsDb.CurrencyDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("currence_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("account_id");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("currences");
                });

            modelBuilder.Entity("ModelsDb.EmployeeDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_employee");

                    b.Property<DateTime>("BirtDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birt_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("PasportNum")
                        .HasColumnType("integer")
                        .HasColumnName("pasport_num");

                    b.Property<int>("Salary")
                        .HasColumnType("integer")
                        .HasColumnName("salary");

                    b.HasKey("Id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("ModelsDb.AccountDb", b =>
                {
                    b.HasOne("ModelsDb.ClientDb", null)
                        .WithMany("Accounts")
                        .HasForeignKey("ClientDbId");
                });

            modelBuilder.Entity("ModelsDb.CurrencyDb", b =>
                {
                    b.HasOne("ModelsDb.AccountDb", "Account")
                        .WithOne("Currency")
                        .HasForeignKey("ModelsDb.CurrencyDb", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ModelsDb.AccountDb", b =>
                {
                    b.Navigation("Currency")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsDb.ClientDb", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
